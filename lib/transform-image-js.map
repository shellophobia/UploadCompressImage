{"version":3,"sources":["webpack://transformImageJS/webpack/bootstrap","webpack://transformImageJS/./src/defaults.js","webpack://transformImageJS/./src/constants.js","webpack://transformImageJS/./src/utils.js","webpack://transformImageJS/./src/resizeImage.js","webpack://transformImageJS/./src/index.js"],"names":["sizeLimit","maxWidth","maxHeight","quality","outputType","allowedFileTypes","OUTPUT_TYPE","BLOB","BASE64","FILE","validateAndGetBlob","image","options","imgBlob","File","fileToBlob","validateFileSize","size","validateFileType","type","fileType","accepted","forEach","allowedFileType","regEx","RegExp","test","file","getBlob","Promise","resolve","_reject","fileReader","FileReader","onload","event","Blob","target","result","readAsArrayBuffer","imageSize","Error","base64ToBlob","base64","sliceSize","replace","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","blob","base64ToFile","fileName","validateOutputType","Object","values","includes","resizeImageFn","window","URL","webkitURL","blobURL","createObjectURL","Image","src","revokeObjectURL","resizedImage","resizeImageCanvas","output","img","canvas","document","createElement","width","height","Math","round","ctx","getContext","drawImage","toDataURL","metadata","originalHeight","originalWidth","resizedHeight","resizedWidth","TransformImage","defaultVal","reject"],"mappings":"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","file":"transform-image-js.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default {\n  sizeLimit: 16777216, // 16MB\n  maxWidth: 500,\n  maxHeight: 500,\n  quality: 0.9,\n  outputType: \"blob\",\n  allowedFileTypes: [\"jpg\", \"png\", \"jpeg\"]\n};\n","export const OUTPUT_TYPE = {\n  BLOB: \"blob\",\n  BASE64: \"base64\",\n  FILE: \"file\"\n};\n","import { OUTPUT_TYPE } from \"./constants\";\n\nexport const validateAndGetBlob = async (image, options) => {\n  let imgBlob = image;\n  if (image instanceof File) {\n    imgBlob = await fileToBlob(image);\n  }\n  validateFileSize(imgBlob.size, options);\n  validateFileType(imgBlob.type, options);\n  return imgBlob;\n};\n\nexport const validateFileType = (fileType, options) => {\n  let accepted = false;\n  options.allowedFileTypes.forEach(allowedFileType => {\n    const regEx = new RegExp(\"image/\" + allowedFileType);\n    if (regEx.test(fileType)) accepted = true;\n  });\n  return accepted;\n};\n\nexport const fileToBlob = async file => {\n  const getBlob = () =>\n    new Promise((resolve, _reject) => {\n      const fileReader = new FileReader();\n      fileReader.onload = event => {\n        resolve(new Blob([event.target.result], { type: file.type }));\n      };\n      fileReader.readAsArrayBuffer(file);\n    });\n  return getBlob();\n};\n\nexport const validateFileSize = (imageSize, options) => {\n  if (imageSize > options.sizeLimit) {\n    throw new Error(\n      `Please upload an image of size less than ${options.sizeLimit /\n        (1024 * 1024)}MB`\n    );\n  }\n};\n\nexport const base64ToBlob = (base64, fileType) => {\n  const sliceSize = 512; // uses 512 as packet size for efficient conversion\n  const regEx = new RegExp(\"^data:\" + fileType + \";base64,\");\n  base64 = base64.replace(regEx, \"\");\n  const byteCharacters = atob(base64);\n  const byteArrays = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n    const byteNumbers = new Array(slice.length);\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    const byteArray = new Uint8Array(byteNumbers);\n\n    byteArrays.push(byteArray);\n  }\n\n  const blob = new Blob(byteArrays, { type: fileType });\n  return blob;\n};\n\nexport const base64ToFile = (base64, fileType, fileName) => {\n  const imgBlob = base64ToBlob(base64, fileType);\n  return new File([imgBlob], fileName, { type: fileType });\n};\n\nexport const validateOutputType = type => {\n  if (!Object.values(OUTPUT_TYPE).includes(type)) {\n    throw new Error(`invalid output type ${type}`);\n  }\n};\n","import { base64ToBlob, base64ToFile } from \"./utils\";\nimport { OUTPUT_TYPE } from \"./constants\";\n\n// Returns a promise\nexport const resizeImageFn = async (\n  imgBlob,\n  fileName,\n  options,\n  resolve,\n  _reject\n) => {\n  window.URL = window.URL || window.webkitURL;\n  const blobURL = window.URL.createObjectURL(imgBlob); // and get it's URL\n\n  // helper Image object\n  const image = new Image();\n  image.src = blobURL;\n  image.onload = function() {\n    // have to wait till it's loaded\n    window.URL.revokeObjectURL(blobURL);\n    const resizedImage = resizeImageCanvas(image, imgBlob.type, options); // send it to canvas\n    switch (options.outputType) {\n      case OUTPUT_TYPE.BASE64:\n        resolve(resizedImage);\n        break;\n      case OUTPUT_TYPE.BLOB:\n        resizedImage.output = base64ToBlob(resizedImage.output, imgBlob.type);\n        resolve(resizedImage);\n        break;\n      default:\n        resizedImage.output = base64ToFile(\n          resizedImage.output,\n          imgBlob.type,\n          fileName\n        );\n        resolve(resizedImage);\n        break;\n    }\n  };\n};\n\nexport const resizeImageCanvas = (img, fileType, options) => {\n  const canvas = document.createElement(\"canvas\");\n  let width = img.width;\n  let height = img.height;\n\n  // calculate the width and height, constraining the proportions\n  if (width > height) {\n    if (width > options.maxWidth) {\n      height = Math.round((height *= options.maxWidth / width));\n      width = options.maxWidth;\n    }\n  } else {\n    if (height > options.maxHeight) {\n      width = Math.round((width *= options.maxHeight / height));\n      height = options.maxHeight;\n    }\n  }\n\n  // resize the canvas and draw the image data into it\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext(\"2d\");\n  ctx.drawImage(img, 0, 0, width, height);\n\n  return {\n    output: canvas.toDataURL(fileType, options.quality),\n    metadata: {\n      originalHeight: img.height,\n      originalWidth: img.width,\n      resizedHeight: height,\n      resizedWidth: width\n    }\n  };\n};\n","import defaultVal from \"./defaults\";\nimport { resizeImageFn } from \"./resizeImage\";\nimport { validateAndGetBlob, validateOutputType } from \"./utils\";\n\nclass TransformImage {\n  /*\n    Options - An object with following properties\n    sizeLimit : the byte size limit for the input file/blob\n    outputType: defines the output object format. Allowed values :- blob/base64/file\n    allowedFileTypes: allowed types for the input file/blob e.g. PNG, JPEG, JPG\n  */\n  constructor(options = {}) {\n    options.sizeLimit = options.sizeLimit || defaultVal.sizeLimit;\n    options.outputType = options.outputType || defaultVal.outputType; // output object format BLOB/BASE64/FILE\n    validateOutputType(options.outputType);\n    options.allowedFileTypes =\n      options.allowedFileTypes || defaultVal.allowedFileTypes; // An array of allowed file types\n    this.options = options;\n  }\n\n  /*\n  @params\n  image - File object / Blob\n  Options - An object with following properties\n    maxWidth: the max width for the file in px\n    maxHeight: the max height for the file in px\n    quality: a value between 0 and 1 to denote the quality of the output image\n  fileName - Name of the file if input is file (Optional)\n  */\n  resizeImage = async (image, options = {}, fileName = \"\") => {\n    // Perform a null check on image\n    if (!image) return;\n\n    options.maxWidth = options.maxWidth || defaultVal.maxWidth;\n    options.maxHeight = options.maxHeight || defaultVal.maxHeight;\n    options.quality = options.quality || defaultVal.quality; // Quality - A value between 0 and 1 to denote the quality of the image in the output\n\n    const imgBlob = await validateAndGetBlob(image, this.options);\n\n    return new Promise((resolve, reject) => {\n      resizeImageFn(\n        imgBlob,\n        fileName,\n        { ...this.options, options },\n        resolve,\n        reject\n      );\n    });\n  };\n}\n\nexport default TransformImage;\n"],"sourceRoot":""}