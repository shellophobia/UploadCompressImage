{"version":3,"sources":["webpack://transformImageJS/webpack/bootstrap","webpack://transformImageJS/./src/defaults.js","webpack://transformImageJS/./src/utils.js","webpack://transformImageJS/./src/resizeImage.js","webpack://transformImageJS/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","sizeLimit","maxWidth","maxHeight","quality","base64OutputType","blobOutputType","allowedFileTypes","validateFileType","fileType","options","accepted","forEach","allowedFileType","RegExp","test","validateFileSize","imageSize","base64ToBlob","base64","regEx","replace","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","push","Blob","type","resizeImageFile","file","resolve","_reject","reader","FileReader","readAsArrayBuffer","onload","event","blob","target","result","size","window","URL","webkitURL","blobURL","createObjectURL","image","Image","src","resizedImage","resizeImageCanvas","output","img","canvas","document","createElement","width","height","Math","round","getContext","drawImage","toDataURL","metadata","originalHeight","originalWidth","resizedHeight","resizedWidth","TransformImage","imageFile","Promise","reject","e","defaultVal","this"],"mappings":"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","file":"transform-image-js.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default {\n  sizeLimit: 16777216, // 16MB\n  maxWidth: 500,\n  maxHeight: 500,\n  quality: 0.92,\n  base64OutputType: false,\n  blobOutputType: true,\n  allowedFileTypes: [\"jpg\", \"png\", \"jpeg\"],\n};\n","export const validateFileType = (fileType, options) => {\n  let accepted = false;\n  options.allowedFileTypes.forEach((allowedFileType) => {\n    const regEx = new RegExp(\"image/\" + allowedFileType);\n    if (regEx.test(fileType)) accepted = true;\n  });\n  return accepted;\n};\n\nexport const validateFileSize = (imageSize, options) => {\n  if (imageSize > options.sizeLimit) {\n    throw (\n      \"Please upload an image of size less than \" +\n      options.sizeLimit / (1024 * 1024) +\n      \"MB\"\n    );\n  }\n};\n\nexport const base64ToBlob = (base64, fileType) => {\n  const sliceSize = 512; // uses 512 as packet size for efficient conversion\n  const regEx = new RegExp(\"^data:\" + fileType + \";base64,\");\n  base64 = base64.replace(regEx, \"\");\n  const byteCharacters = atob(base64);\n  const byteArrays = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n    const byteNumbers = new Array(slice.length);\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    const byteArray = new Uint8Array(byteNumbers);\n\n    byteArrays.push(byteArray);\n  }\n\n  const blob = new Blob(byteArrays, { type: fileType });\n  return blob;\n};\n","import { validateFileType, validateFileSize, base64ToBlob } from \"./utils\";\n\n// Returns a promise\nexport const resizeImageFile = async (file, options, resolve, _reject) => {\n  // Perform a null check on file\n  if (!file) return;\n\n  // Validate the file type\n  if (!validateFileType(file.type, options)) {\n    throw \"File \" + file.name + \" is not a supported image.\";\n  }\n\n  // read the files\n  const reader = new FileReader();\n\n  reader.readAsArrayBuffer(file);\n\n  reader.onload = (event) => {\n    const blob = new Blob([event.target.result]); // create blob...\n    const imageSize = blob.size;\n\n    validateFileSize(imageSize, options);\n\n    window.URL = window.URL || window.webkitURL;\n    const blobURL = window.URL.createObjectURL(blob); // and get it's URL\n\n    // helper Image object\n    const image = new Image();\n    image.src = blobURL;\n    image.onload = function () {\n      // have to wait till it's loaded\n      const resizedImage = resizeImageCanvas(image, file.type, options); // send it to canvas\n      if (options.base64OutputType) {\n        resolve(resizedImage);\n      } else if (options.blobOutputType) {\n        resizedImage.output = base64ToBlob(resizedImage.output, file.type);\n        resolve(resizedImage);\n      }\n    };\n  };\n};\n\nexport const resizeImageCanvas = (img, fileType, options) => {\n  const canvas = document.createElement(\"canvas\");\n  let width = img.width;\n  let height = img.height;\n\n  // calculate the width and height, constraining the proportions\n  if (width > height) {\n    if (width > options.maxWidth) {\n      height = Math.round((height *= options.maxWidth / width));\n      width = options.maxWidth;\n    }\n  } else {\n    if (height > options.maxHeight) {\n      width = Math.round((width *= options.maxHeight / height));\n      height = options.maxHeight;\n    }\n  }\n\n  // resize the canvas and draw the image data into it\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext(\"2d\");\n  ctx.drawImage(img, 0, 0, width, height);\n\n  return {\n    output: canvas.toDataURL(fileType, options.quality),\n    metadata: {\n      originalHeight: img.height,\n      originalWidth: img.width,\n      resizedHeight: height,\n      resizedWidth: width,\n    },\n  };\n};\n","import defaultVal from \"./defaults\";\nimport { resizeImageFile } from \"./resizeImage\";\n\nclass TransformImage {\n  /*\n    Options - An object with following properties\n    sizeLimit : the byte size limit for the output file\n    maxWidth: the max width for the file in px\n    maxHeight: the max height for the file in px\n    quality: a value between 0 and 1 to denote the quality of the output image\n    base64OutputType: boolean to return a base64 string as the output\n    blobOutputType: boolean to return a blob as output\n    allowedFileTypes: allowed types for the image file e.g. PNG, JPEG, JPG\n  */\n  constructor(options) {\n    options.sizeLimit = options.sizeLimit || defaultVal.sizeLimit;\n    options.maxWidth = options.maxWidth || defaultVal.maxWidth;\n    options.maxHeight = options.maxHeight || defaultVal.maxHeight;\n    options.quality = options.quality || defaultVal.quality; // Quality - A value between 0 and 1 to denote the quality of the image in the output\n    options.base64OutputType =\n      options.base64OutputType || defaultVal.base64OutputType; // return Base64 string\n    options.blobOutputType =\n      options.blobOutputType || defaultVal.blobOutputType; // return Blob // NOTE: you can only choose one of the base64 or blob options\n    options.allowedFileTypes =\n      options.allowedFileTypes || defaultVal.allowedFileTypes; // An array of allowed file types\n    this.options = options;\n  }\n\n  /*\n  @params\n  imageFile - The image file object obtained after user has uploaded the file\n  */\n  resizeImage = (imageFile) => {\n    return new Promise((resolve, reject) => {\n      resizeImageFile(imageFile, this.options, resolve, reject).catch((e) => {\n        reject(e);\n      });\n    });\n  };\n}\n\nexport default TransformImage;\n"],"sourceRoot":""}